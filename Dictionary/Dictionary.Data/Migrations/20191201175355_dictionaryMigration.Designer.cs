// <auto-generated />
using System;
using Dictionary.Data.Implementation;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dictionary.Data.Migrations
{
    [DbContext(typeof(DictionaryDbContext))]
    [Migration("20191201175355_dictionaryMigration")]
    partial class dictionaryMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dictionary.Data.Entity.EnglishIdiom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExplanationId");

                    b.Property<int?>("LanguageOriginId");

                    b.Property<string>("Phrase");

                    b.Property<int?>("UkranianIdiomId");

                    b.Property<int?>("UsageId");

                    b.HasKey("Id");

                    b.HasIndex("ExplanationId");

                    b.HasIndex("LanguageOriginId");

                    b.HasIndex("UkranianIdiomId");

                    b.HasIndex("UsageId");

                    b.ToTable("EnglishIdioms");
                });

            modelBuilder.Entity("Dictionary.Data.Entity.Explanation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Meaning");

                    b.HasKey("Id");

                    b.ToTable("Explanations");
                });

            modelBuilder.Entity("Dictionary.Data.Entity.LanguageOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Origin");

                    b.HasKey("Id");

                    b.ToTable("LanguageOrigins");
                });

            modelBuilder.Entity("Dictionary.Data.Entity.UkranianIdiom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UkranianEquivalent");

                    b.HasKey("Id");

                    b.ToTable("UkranianIdioms");
                });

            modelBuilder.Entity("Dictionary.Data.Entity.Usage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UsageType");

                    b.HasKey("Id");

                    b.ToTable("Usages");
                });

            modelBuilder.Entity("Dictionary.Data.Entity.EnglishIdiom", b =>
                {
                    b.HasOne("Dictionary.Data.Entity.Explanation", "Explanation")
                        .WithMany("EnglishIdioms")
                        .HasForeignKey("ExplanationId");

                    b.HasOne("Dictionary.Data.Entity.LanguageOrigin", "LanguageOrigin")
                        .WithMany("EnglishIdioms")
                        .HasForeignKey("LanguageOriginId");

                    b.HasOne("Dictionary.Data.Entity.UkranianIdiom", "UkranianIdiom")
                        .WithMany("EnglishIdioms")
                        .HasForeignKey("UkranianIdiomId");

                    b.HasOne("Dictionary.Data.Entity.Usage", "Usage")
                        .WithMany("EnglishIdioms")
                        .HasForeignKey("UsageId");
                });
#pragma warning restore 612, 618
        }
    }
}
